apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'idea'
apply plugin: 'jetty'

repositories {
    mavenCentral()
}

configurations {
    runtimeOnly
}

dependencies {
    compile "javax.ws.rs:jsr311-api:1.1.1"
//    compile 'com.sun.jersey:jersey-server:1.13'
//    compile 'com.sun.jersey:jersey-core:1.13'
//    compile 'com.sun.jersey:jersey-servlet:1.13'
    compile 'org.glassfish.jersey.core:jersey-server:2.15'
    compile 'org.glassfish.jersey.core:jersey-common:2.15'
    compile 'org.glassfish.jersey.containers:jersey-container-servlet:2.15'
    compile 'org.glassfish.jersey.containers:jersey-container-servlet-core:2.15'


    compile 'org.glassfish.jersey.security:oauth1-server:2.13'

    compile 'com.google.guava:guava:18.0'
    compile 'org.slf4j:slf4j-api:1.7.+'
    compile 'com.thoughtworks.xstream:xstream:1.4.2'

//    compile 'com.google.oauth-client:google-oauth-client:1.19.0'
    compile 'oauth.signpost:signpost-core:1.2.1.2'

    testCompile 'org.hamcrest:hamcrest-all:1.3'
    testCompile 'junit:junit:4.11'
    testCompile 'org.mockito:mockito-all:1.10.8'

    testRuntime 'ch.qos.logback:logback-classic:1.1.2'
    testRuntime 'ch.qos.logback:logback-core:1.1.2'

    // to run our App on Heroku
    runtimeOnly "org.mortbay.jetty:jetty-runner:8.1.1.v20120215"
    // monitoring on Heroku
    runtimeOnly "com.newrelic.agent.java:newrelic-agent:2.18.0"

}

war {
    baseName = "hh-integration-challenge"
}

defaultTasks "clean", "build"

task wrapper(type: Wrapper) {
    gradleVersion = '2.0'
}

task copyToLib << {
    copy {
        from configurations.runtimeOnly.copy().setTransitive(false)
        into "$buildDir/libs"
        rename { name ->
            def artifacts = configurations.runtimeOnly.resolvedConfiguration.resolvedArtifacts
            def artifact = artifacts.find { it.file.name == name }
            "${artifact.name}.${artifact.extension}"
        }
    }
}

task stage (dependsOn: ['copyToLib'])
copyToLib.dependsOn build
